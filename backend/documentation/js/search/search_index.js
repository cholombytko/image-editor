var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.28,1,2.406]],["body/modules/AppModule.html",[0,1.774,1,4.62,2,1.332,3,1.424,4,1.648,5,1.648,6,1.424,7,1.648,8,1.648,9,2.443,10,2.443,11,3.706,12,0.022,13,3.706,14,3.417,15,3.706,16,3.17,17,2.39,18,1.648,19,1.648,20,0.188,21,0.166,22,0.166,23,2.869,24,2.39,25,0.931,26,0.691,27,2.869,28,2.443,29,1.954,30,2.869,31,2.869,32,2.869,33,2.869,34,2.869,35,1.954,36,3.545,37,2.869,38,2.869,39,2.869,40,2.592,41,2.869,42,2.869,43,2.869,44,2.869,45,0.188,46,0.064,47,0.013,48,0.013]],["title/controllers/AuthController.html",[49,2.201,50,2.406]],["body/controllers/AuthController.html",[12,0.022,20,0.2,21,0.176,22,0.176,25,0.802,26,0.733,45,0.2,46,0.068,47,0.013,48,0.013,49,1.896,50,2.958,51,1.896,52,2.593,53,2.593,54,2.073,55,0.442,56,2.156,57,3.235,58,4.313,59,4.313,60,2.593,61,3.761,62,1.89,63,4.344,64,0.986,65,3.044,66,1.573,67,1.176,68,0.427,69,1.246,70,3.7,71,2.156,72,2.942,73,2.593,74,3.761,75,4.344,76,3.044,77,3.7,78,4.313,79,2.593,80,2.909,81,2.593,82,4.344,83,3.044,84,3.044,85,3.044,86,2.296,87,2.156,88,3.044,89,3.044]],["title/guards/AuthGuard.html",[90,2.664,91,2.406]],["body/guards/AuthGuard.html",[12,0.022,20,0.157,21,0.138,22,0.138,25,0.808,26,0.576,35,1.628,40,1.489,45,0.157,46,0.054,47,0.011,48,0.011,54,1.628,55,0.347,56,1.804,57,2.343,64,0.998,66,1.592,67,1.19,68,0.483,69,1.261,71,1.804,72,1.936,87,1.804,91,2.475,92,2.39,93,2.036,94,4.913,95,3.291,96,3.634,97,1.485,98,2.036,99,4.74,100,2.872,101,2.39,102,3.634,103,4.913,104,2.39,105,2.39,106,3.634,107,2.39,108,3.634,109,0.731,110,3.745,111,1.397,112,1.802,113,2.475,114,2.39,115,2.39,116,2.475,117,2.39,118,3.291,119,2.39,120,2.264,121,2.036,122,2.036,123,2.39,124,2.623,125,2.39,126,2.39,127,3.316,128,2.995,129,2.264,130,2.475,131,2.39,132,1.485,133,1.802,134,1.11,135,2.39,136,2.39,137,2.39]],["title/modules/AuthModule.html",[0,1.28,11,2.201]],["body/modules/AuthModule.html",[0,1.949,2,1.581,3,1.691,4,1.956,5,1.956,6,1.691,7,3.09,8,1.956,11,4.205,12,0.022,16,3.353,17,2.699,18,1.956,19,1.956,20,0.223,21,0.197,22,0.197,24,2.699,25,0.884,26,0.82,45,0.223,46,0.077,47,0.015,48,0.015,50,3.665,51,2.927,80,3.614,81,2.901,138,2.901,139,3.406,140,2.901,141,3.614,142,3.406,143,3.406,144,3.406,145,2.901]],["title/injectables/AuthService.html",[80,2.029,111,1.358]],["body/injectables/AuthService.html",[12,0.022,20,0.13,21,0.115,22,0.115,25,0.839,26,0.479,35,1.354,45,0.13,46,0.045,47,0.01,48,0.01,55,0.289,56,1.564,57,2.75,58,2.683,59,2.683,60,2.683,64,0.888,66,1.417,67,1.397,68,0.385,69,1.122,70,1.694,71,1.564,72,2.371,73,2.683,77,1.694,80,1.809,87,1.564,95,2.437,97,1.288,98,1.694,99,4.395,100,2.684,111,1.211,112,1.5,118,2.772,120,1.962,121,2.683,122,1.694,124,2.867,127,2.95,128,2.665,129,1.962,130,3.683,132,1.819,133,2.376,134,1.816,141,3.105,146,1.142,147,1.694,148,1.989,149,3.683,150,1.989,151,1.989,152,1.989,153,3.151,154,1.989,155,2.146,156,1.5,157,1.989,158,2.146,159,1.989,160,1.989,161,1.354,162,1.989,163,3.151,164,2.683,165,1.989,166,1.989,167,1.989,168,1.989,169,0.865,170,1.989,171,1.462,172,3.151,173,3.151,174,2.683,175,1.564,176,1.989,177,3.151,178,1.989,179,1.989,180,1.989,181,1.989,182,3.151]],["title/classes/AuthTokenNotFoundException.html",[46,0.079,113,2.406]],["body/classes/AuthTokenNotFoundException.html",[12,0.022,20,0.273,21,0.241,22,0.241,25,0.605,26,1.004,45,0.273,46,0.094,47,0.017,48,0.017,54,3.663,64,0.946,66,1.509,67,1.128,68,0.41,69,1.195,97,1.703,109,1.198,113,3.663,118,2.596,183,1.509,184,4.58,185,3.55,186,3.089,187,4.49,188,3.349,189,4.168,190,3.349,191,2.596,192,4.168,193,3.142]],["title/classes/CreateImageDto.html",[46,0.079,194,2.406]],["body/classes/CreateImageDto.html",[12,0.02,20,0.337,21,0.298,22,0.298,45,0.337,46,0.116,47,0.019,48,0.019,183,1.863,194,4.175,195,4.382,196,3.88]],["title/classes/CreateProjectDto.html",[46,0.079,197,2.406]],["body/classes/CreateProjectDto.html",[12,0.022,20,0.242,21,0.214,22,0.214,25,0.536,45,0.242,46,0.112,47,0.015,48,0.015,55,0.536,62,2.441,64,1.274,68,0.552,109,1.207,175,2.785,183,1.337,197,3.382,198,5.11,199,2.784,200,1.344,201,2.032,202,3.222,203,4.966,204,3.693,205,3.693,206,1.695,207,2.784,208,3.145,209,3.744,210,3.737,211,3.821,212,2.121]],["title/modules/DatabaseModule.html",[0,1.28,13,2.201]],["body/modules/DatabaseModule.html",[0,1.752,2,1.649,12,0.022,13,3.013,20,0.233,21,0.206,22,0.206,24,2.778,25,0.926,26,0.856,28,4.12,29,2.419,40,2.212,45,0.233,46,0.08,47,0.015,48,0.015,68,0.349,132,1.977,169,1.545,201,1.752,213,3.552,214,5.029,215,2.419,216,1.763,217,3.552,218,2.105,219,3.552,220,3.552,221,3.552,222,3.552,223,3.552,224,3.552,225,3.552,226,3.552,227,3.552,228,3.552,229,3.552,230,3.552,231,3.552,232,3.552,233,3.552,234,2.212,235,3.552]],["title/classes/FindByUserIdDto.html",[46,0.079,236,2.664]],["body/classes/FindByUserIdDto.html",[12,0.021,20,0.283,21,0.25,22,0.25,25,0.626,45,0.283,46,0.123,47,0.017,48,0.017,55,0.626,62,1.876,64,0.979,68,0.424,132,2.246,175,3.004,183,1.562,200,1.488,206,1.877,207,3.252,209,4.145,210,3.423,212,2.477,236,4.145,237,4.682,238,3.673,239,4.312]],["title/interfaces/IAuthData.html",[149,2.406,240,1.013]],["body/interfaces/IAuthData.html",[12,0.021,20,0.275,21,0.243,22,0.243,45,0.275,47,0.017,48,0.017,55,0.609,67,1.706,68,0.587,69,1.548,109,1.399,134,2.926,149,3.676,169,2.743,200,1.461,240,1.202,241,1.945,242,3.16,243,3.57]],["title/interfaces/IAuthResponse.html",[161,2.406,240,1.013]],["body/interfaces/IAuthResponse.html",[12,0.021,20,0.293,21,0.259,22,0.259,45,0.293,47,0.017,48,0.017,55,0.649,68,0.553,109,1.238,161,3.828,174,5.497,175,3.204,200,1.521,206,2.1,240,1.281,241,2.073,242,3.368,244,3.805]],["title/interfaces/ICreateImage.html",[240,1.013,245,2.201]],["body/interfaces/ICreateImage.html",[12,0.021,20,0.31,21,0.273,22,0.273,45,0.31,47,0.018,48,0.018,55,0.686,68,0.464,109,1.269,200,1.575,201,2.384,240,1.354,241,2.192,245,3.624,246,4.022,247,3.56]],["title/interfaces/ICreateProject.html",[240,1.013,248,2.406]],["body/interfaces/ICreateProject.html",[12,0.021,20,0.278,21,0.245,22,0.245,45,0.278,47,0.017,48,0.017,55,0.616,68,0.59,109,1.348,175,3.143,200,1.472,201,2.293,202,3.636,206,2.049,240,1.216,241,1.967,248,3.703,249,3.61,250,3.196]],["title/interfaces/ICreateUser.html",[240,1.013,251,2.406]],["body/interfaces/ICreateUser.html",[12,0.021,20,0.278,21,0.245,22,0.245,45,0.278,47,0.017,48,0.017,55,0.616,67,1.714,68,0.59,109,1.402,134,2.939,169,2.755,200,1.472,240,1.216,241,1.967,251,3.703,252,3.61,253,3.196]],["title/interfaces/IFindUser.html",[240,1.013,254,2.406]],["body/interfaces/IFindUser.html",[12,0.021,20,0.286,21,0.253,22,0.253,45,0.286,47,0.017,48,0.017,55,0.634,68,0.544,69,1.835,109,1.224,134,2.97,171,2.97,200,1.499,206,2.077,240,1.251,241,2.025,253,3.29,254,3.771,255,3.716]],["title/interfaces/IUpdateProject.html",[240,1.013,256,2.406]],["body/interfaces/IUpdateProject.html",[12,0.021,20,0.272,21,0.24,22,0.24,45,0.272,47,0.017,48,0.017,55,0.602,68,0.584,69,1.801,109,1.34,175,3.117,200,1.45,201,2.273,202,3.606,206,2.027,240,1.189,241,1.924,250,3.125,256,3.649,257,3.53]],["title/interfaces/IUser.html",[240,1.013,258,2.406]],["body/interfaces/IUser.html",[12,0.021,20,0.266,21,0.235,22,0.235,45,0.266,47,0.016,48,0.016,55,0.589,67,1.685,68,0.612,109,1.391,134,2.89,169,2.709,171,2.89,200,1.43,206,2.006,240,1.163,241,1.882,258,3.598,259,3.453]],["title/entities/Image.html",[201,1.28,260,1.882]],["body/entities/Image.html",[12,0.022,20,0.234,21,0.207,22,0.207,25,0.705,45,0.234,46,0.08,47,0.015,48,0.015,55,0.518,62,2.399,64,1.252,68,0.542,109,0.976,171,2.559,200,1.313,201,2.241,206,1.657,218,2.931,234,2.223,260,1.902,261,3.04,262,4.158,263,3.569,264,4.158,265,3.569,266,3.04,267,4.853,268,3.569,269,3.04,270,4.133,271,1.902,272,3.569]],["title/modules/ImagesModule.html",[0,1.28,14,2.029]],["body/modules/ImagesModule.html",[0,2.022,2,1.697,3,1.815,4,2.1,5,2.1,6,1.815,7,3.206,8,3.206,12,0.022,14,3.774,17,2.833,18,2.1,19,2.1,20,0.24,21,0.212,22,0.212,24,2.1,25,0.868,26,0.881,45,0.24,46,0.082,47,0.015,48,0.015,201,1.324,215,2.49,216,1.815,273,3.114,274,3.114,275,3.114,276,3.995,277,3.657,278,3.657,279,3.114,280,3.657]],["title/injectables/ImagesService.html",[111,1.358,276,2.029]],["body/injectables/ImagesService.html",[12,0.022,20,0.15,21,0.132,22,0.132,25,0.793,26,0.549,45,0.15,46,0.051,47,0.011,48,0.011,55,0.331,56,1.741,57,3.383,64,1.175,66,1.874,67,1.401,68,0.509,69,1.484,71,2.38,72,3.129,87,2.12,95,1.42,97,1.433,111,1.348,124,1.741,129,3.223,130,3.265,146,1.31,171,2.225,201,1.547,206,2.056,216,1.132,245,2.986,271,1.215,276,2.014,279,1.943,281,1.943,282,2.184,283,2.986,284,3.506,285,2.644,286,2.281,287,3.265,288,2.281,289,3.506,290,2.644,291,2.281,292,2.986,293,2.281,294,3.506,295,2.281,296,2.644,297,4.083,298,2.281,299,1.72,300,1.943,301,3.506,302,2.281,303,2.281,304,2.281,305,2.281,306,2.281,307,2.281,308,2.986,309,2.281]],["title/classes/IncorrectPasswordException.html",[46,0.079,158,2.406]],["body/classes/IncorrectPasswordException.html",[12,0.022,20,0.278,21,0.245,22,0.245,25,0.616,26,1.021,45,0.278,46,0.095,47,0.017,48,0.017,64,0.962,66,1.535,67,1.147,68,0.417,69,1.216,97,1.732,109,1.208,158,3.703,169,1.844,183,1.535,186,3.122,187,4.526,188,3.386,190,3.386,191,2.64,310,4.63,311,3.61,312,4.239,313,4.239]],["title/classes/InvalidTokenException.html",[46,0.079,116,2.406]],["body/classes/InvalidTokenException.html",[12,0.022,20,0.275,21,0.243,22,0.243,25,0.609,26,1.009,45,0.275,46,0.094,47,0.017,48,0.017,64,0.952,66,1.518,67,1.134,68,0.412,69,1.202,97,1.713,109,1.201,116,3.676,118,3.718,183,1.518,186,3.1,187,4.502,188,3.361,190,3.361,191,2.61,314,4.597,315,3.57,316,4.191,317,4.191]],["title/injectables/PasswordService.html",[111,1.358,141,2.029]],["body/injectables/PasswordService.html",[12,0.022,20,0.2,21,0.176,22,0.176,25,0.735,26,0.733,29,2.073,45,0.2,46,0.068,47,0.013,48,0.013,55,0.442,56,2.156,57,3.235,64,1.15,66,1.834,67,1.371,68,0.498,69,1.452,71,2.156,72,2.942,86,2.296,87,2.156,97,1.244,109,1.308,111,1.67,124,1.511,141,2.495,146,1.748,164,3.7,169,1.325,214,5.171,318,2.593,319,5.064,320,3.044,321,3.044,322,3.044,323,5.522,324,3.044,325,4.344,326,4.344,327,3.044,328,3.7,329,4.344,330,3.044,331,3.044,332,3.044]],["title/entities/Project.html",[218,1.537,260,1.882]],["body/entities/Project.html",[12,0.022,20,0.202,21,0.178,22,0.178,25,0.74,40,3.176,45,0.202,46,0.069,47,0.014,48,0.014,55,0.448,62,2.416,64,1.261,68,0.546,109,0.882,132,2.665,171,2.367,200,1.186,201,2.271,202,2.928,206,1.496,218,1.907,234,1.92,260,1.642,262,3.845,264,3.304,266,2.625,270,3.732,271,1.642,333,2.625,334,3.082,335,4.382,336,3.082,337,3.082,338,2.625,339,3.082,340,3.082,341,4.382,342,3.082,343,3.082,344,3.082,345,4.382,346,4.382,347,3.082,348,2.625]],["title/controllers/ProjectController.html",[49,2.201,349,2.406]],["body/controllers/ProjectController.html",[12,0.022,20,0.149,21,0.132,22,0.132,25,0.75,26,0.548,45,0.149,46,0.051,47,0.011,48,0.011,49,1.416,51,1.416,53,1.937,55,0.33,56,1.737,62,2.248,64,1.173,66,1.871,67,1.399,68,0.508,69,1.482,71,2.565,78,2.979,79,3.631,86,1.714,87,2.565,91,1.549,109,1.277,171,2.723,197,3.716,218,0.989,282,2.179,285,2.638,296,1.714,349,2.382,350,1.937,351,3.498,352,2.979,353,2.979,354,2.274,355,2.274,356,2.274,357,3.498,358,2.274,359,2.274,360,3.498,361,2.274,362,1.937,363,3.498,364,2.274,365,3.996,366,3.498,367,2.274,368,2.274,369,2.274,370,2.274,371,2.274,372,2.448,373,1.937,374,2.274,375,3.498,376,2.274,377,2.274,378,2.274,379,2.274,380,2.274,381,2.274,382,2.274,383,2.274,384,2.274,385,2.274,386,2.274,387,2.274,388,2.274,389,2.274,390,2.274]],["title/modules/ProjectModule.html",[0,1.28,15,2.201]],["body/modules/ProjectModule.html",[0,1.898,2,1.505,3,1.61,4,1.863,5,1.863,6,1.61,7,3.011,8,1.863,12,0.022,14,3.559,15,4.163,16,3.302,17,2.609,18,1.863,19,1.863,20,0.213,21,0.188,22,0.188,24,2.609,25,0.924,26,0.781,45,0.213,46,0.073,47,0.014,48,0.014,51,2.829,145,2.762,215,2.209,216,1.61,218,1.411,349,3.57,372,3.559,373,2.762,391,2.762,392,2.762,393,3.243,394,3.243,395,3.243,396,2.762,397,3.243,398,3.243]],["title/injectables/ProjectService.html",[111,1.358,372,2.029]],["body/injectables/ProjectService.html",[12,0.022,20,0.105,21,0.092,22,0.092,25,0.75,26,0.385,45,0.105,46,0.036,47,0.008,48,0.008,55,0.232,56,1.31,57,3.231,64,1.059,66,1.69,67,1.263,68,0.459,69,1.338,71,2.151,72,2.937,87,1.943,95,2.099,97,1.078,100,2.451,110,1.36,111,1.014,112,1.204,124,2.451,127,1.989,128,1.797,129,2.437,130,3.755,132,1.771,133,1.204,146,0.917,171,2.291,175,1.673,193,1.989,201,1.69,202,0.917,206,1.972,216,0.793,218,2.148,248,2.665,256,2.665,271,0.851,276,2.248,282,1.643,283,2.247,285,1.989,287,2.665,290,1.989,292,2.247,296,1.989,299,1.204,308,2.247,353,2.247,362,2.247,372,1.515,396,1.36,399,1.36,400,2.638,401,1.597,402,3.37,403,1.597,404,2.638,405,1.597,406,2.638,407,1.597,408,1.597,409,1.597,410,1.597,411,1.597,412,1.597,413,1.597,414,2.638,415,1.597,416,1.597,417,1.597,418,1.597,419,1.597,420,3.914,421,1.597,422,3.37,423,2.638,424,2.247,425,2.638,426,2.638,427,2.638,428,2.638,429,1.597,430,1.597,431,1.597,432,1.597,433,1.597,434,1.597,435,1.597,436,1.597,437,1.597]],["title/classes/SignInDto.html",[46,0.079,61,2.406]],["body/classes/SignInDto.html",[12,0.022,20,0.253,21,0.224,22,0.224,25,0.561,45,0.253,46,0.115,47,0.016,48,0.016,55,0.561,61,3.487,62,2.227,64,1.162,68,0.503,109,1.23,124,1.919,134,2.664,169,2.498,183,1.4,200,1.386,210,3.575,211,3.487,212,2.22,438,3.909,439,2.914,440,3.292,441,3.865,442,3.292,443,3.865,444,4.36,445,3.292,446,2.632,447,2.632,448,3.292]],["title/classes/SignUpDto.html",[46,0.079,74,2.406]],["body/classes/SignUpDto.html",[12,0.022,20,0.235,21,0.208,22,0.208,25,0.521,45,0.235,46,0.109,47,0.015,48,0.015,55,0.521,62,2.405,64,1.255,67,1.496,68,0.543,74,3.316,109,1.286,124,1.78,134,2.566,169,2.405,183,1.299,200,1.318,210,3.692,211,3.765,212,2.06,438,4.038,440,3.054,442,3.054,444,4.147,445,3.054,446,2.442,447,2.442,448,3.054,449,2.704,450,3.586,451,3.586,452,3.586,453,3.586]],["title/classes/UpdateImageDto.html",[46,0.079,454,2.664]],["body/classes/UpdateImageDto.html",[12,0.022,20,0.304,21,0.268,22,0.268,25,0.835,45,0.304,46,0.104,47,0.018,48,0.018,183,1.678,186,3.303,194,3.156,196,3.494,282,2.886,454,4.336,455,3.947,456,5.751,457,4.634,458,3.947,459,3.947,460,4.634]],["title/classes/UpdateProjectDto.html",[46,0.079,365,2.406]],["body/classes/UpdateProjectDto.html",[12,0.022,20,0.24,21,0.212,22,0.212,25,0.531,45,0.24,46,0.111,47,0.015,48,0.015,55,0.531,62,2.429,64,1.267,68,0.549,69,1.714,109,1.203,175,2.771,183,1.324,199,2.757,200,1.335,201,2.022,202,3.206,206,1.684,207,2.757,208,3.114,209,3.72,210,3.072,211,4.25,212,2.1,365,3.36,461,5.09,462,3.657,463,3.657]],["title/entities/User.html",[132,1.444,260,1.882]],["body/entities/User.html",[12,0.022,20,0.195,21,0.172,22,0.172,25,0.62,40,2.659,45,0.195,46,0.067,47,0.013,48,0.013,55,0.432,62,2.517,64,1.313,67,1.352,68,0.569,109,1.212,132,1.745,134,2.319,169,2.174,171,2.319,200,1.156,206,1.457,218,2.62,234,1.851,260,1.583,262,3.767,264,4.541,269,2.531,271,1.583,338,2.531,348,2.531,424,4.255,464,2.531,465,6.711,466,2.972,467,2.972,468,2.972,469,2.972,470,2.972,471,4.269,472,2.972,473,4.269,474,2.972]],["title/classes/UserAlreadyExistsException.html",[46,0.079,155,2.406]],["body/classes/UserAlreadyExistsException.html",[12,0.022,20,0.273,21,0.241,22,0.241,25,0.605,26,1.004,45,0.273,46,0.094,47,0.017,48,0.017,64,0.946,66,1.509,67,1.128,68,0.41,69,1.195,97,1.703,109,1.198,155,3.663,156,4.49,183,1.509,186,3.089,188,3.349,190,3.349,191,2.596,475,4.055,476,3.55,477,5.071,478,4.168,479,3.55,480,4.168]],["title/modules/UserModule.html",[0,1.28,16,1.882]],["body/modules/UserModule.html",[0,2.022,2,1.697,3,1.815,4,2.1,5,2.1,6,1.815,7,3.206,8,3.206,12,0.022,16,3.501,17,2.833,18,2.1,19,2.1,20,0.24,21,0.212,22,0.212,24,2.1,25,0.868,26,0.881,45,0.24,46,0.082,47,0.015,48,0.015,100,3.454,132,1.494,215,2.49,216,1.815,481,3.114,482,3.114,483,3.114,484,3.657,485,3.657,486,3.114,487,3.657]],["title/classes/UserNotFoundException.html",[46,0.079,120,2.201]],["body/classes/UserNotFoundException.html",[12,0.022,20,0.278,21,0.245,22,0.245,25,0.616,26,1.021,45,0.278,46,0.095,47,0.017,48,0.017,64,0.962,66,1.535,67,1.147,68,0.417,69,1.216,97,1.732,109,1.208,120,3.386,183,1.535,186,3.122,188,3.386,190,3.386,191,2.64,193,3.196,475,4.099,477,5.112,479,3.61,488,3.61,489,4.239]],["title/injectables/UserService.html",[100,1.754,111,1.358]],["body/injectables/UserService.html",[12,0.022,20,0.184,21,0.162,22,0.162,25,0.885,26,0.675,45,0.184,46,0.063,47,0.013,48,0.013,55,0.407,56,2.032,57,3.145,64,1.098,66,1.751,67,1.309,68,0.475,69,1.387,71,2.032,72,2.181,87,2.032,95,1.746,97,1.673,100,2.032,111,1.574,124,2.032,129,3.011,132,2.172,146,1.61,216,1.392,251,3.62,254,3.62,258,1.91,271,1.494,282,2.549,287,3.62,290,3.087,299,2.114,300,2.388,352,3.486,486,2.388,490,2.388,491,2.804,492,2.804,493,4.093,494,2.804,495,2.804,496,4.093,497,2.804,498,4.093,499,2.804,500,2.804,501,2.804,502,2.804,503,2.804,504,2.804]],["title/coverage.html",[505,3.634]],["body/coverage.html",[6,0.995,12,0.022,22,0.116,46,0.138,47,0.01,48,0.01,49,1.975,50,1.365,52,1.707,54,1.365,61,1.365,68,0.197,74,1.365,80,1.151,90,1.512,91,1.365,93,1.707,100,0.995,111,1.873,113,1.365,116,1.365,118,1.249,120,1.249,128,1.365,132,1.296,141,1.151,147,1.707,149,1.365,155,1.365,156,1.512,158,1.365,161,1.365,184,1.707,185,1.707,194,1.365,195,1.707,196,2.391,197,1.365,198,1.707,199,2.391,201,0.726,218,0.872,236,1.512,237,1.707,238,1.707,240,1.613,242,2.391,243,1.707,244,1.707,245,1.249,246,1.707,247,1.512,248,1.365,249,1.707,250,2.391,251,1.365,252,1.707,253,2.391,254,1.365,255,1.707,256,1.365,257,1.707,258,1.365,259,1.707,260,2.096,261,1.707,276,1.151,281,1.707,310,1.707,311,1.707,314,1.707,315,1.707,318,1.707,333,1.707,349,1.365,350,1.707,365,1.365,372,1.151,399,1.707,438,3.045,439,2.391,446,2.16,449,2.391,454,1.512,455,1.707,461,1.707,464,1.707,475,2.391,476,1.707,488,1.707,490,1.707,505,1.512,506,2.005,507,2.005,508,2.005,509,7.005,510,4.471,511,3.171,512,5.624,513,6.049,514,5.424,515,3.171,516,1.707,517,2.005,518,2.005,519,2.005,520,2.005,521,2.005]],["title/dependencies.html",[3,2.109,522,2.514]],["body/dependencies.html",[3,2.002,12,0.022,26,0.971,29,2.746,35,2.746,36,3.434,46,0.118,47,0.016,48,0.016,212,2.316,216,2.002,271,2.148,328,3.434,458,3.434,459,3.434,523,5.86,524,4.032,525,4.032,526,4.032,527,4.032,528,4.032,529,4.032,530,4.032,531,4.032,532,4.032,533,4.032,534,4.032,535,4.032,536,4.032,537,4.032,538,4.032,539,4.032,540,4.032,541,4.032,542,4.032]],["title/miscellaneous/functions.html",[543,1.695,544,3.619]],["body/miscellaneous/functions.html",[6,3.279,12,0.019,47,0.019,48,0.019,55,0.763,516,4.475,543,3.018,544,4.475,545,5.254]],["title/index.html",[55,0.429,546,2.952,547,2.952]],["body/index.html",[12,0.022,21,0.189,47,0.014,48,0.014,218,1.417,287,2.218,505,2.456,548,3.257,549,3.257,550,4.556,551,3.257,552,3.257,553,3.257,554,3.257,555,3.257,556,3.257,557,2.774,558,5.255,559,3.257,560,3.257,561,3.257,562,5.255,563,6.371,564,3.257,565,3.257,566,3.257,567,6.206,568,3.257,569,3.257,570,4.556,571,3.257,572,3.257,573,3.257,574,3.257,575,4.556,576,4.556,577,3.257,578,3.257,579,3.257,580,4.556,581,4.556,582,3.257,583,3.257,584,3.257,585,3.257,586,2.774,587,3.257,588,3.257,589,3.257,590,3.257,591,3.257,592,3.257,593,3.257,594,3.257,595,3.257,596,3.257,597,2.774,598,3.257,599,3.257,600,3.257,601,3.257,602,3.257,603,3.257,604,2.774]],["title/modules.html",[2,2.237]],["body/modules.html",[1,3.098,2,2.111,11,2.833,12,0.018,13,2.833,14,2.613,15,2.833,16,2.424,47,0.018,48,0.018,586,5.696,605,6.688,606,6.688,607,6.821,608,4.549,609,4.549]],["title/overview.html",[610,4.105]],["body/overview.html",[0,1.047,1,4.547,2,1.342,3,1.435,4,1.66,5,1.66,6,1.435,7,1.66,8,1.66,9,2.462,10,2.462,11,3.999,12,0.021,13,3.064,14,3.534,15,3.999,16,3.357,17,2.404,18,1.66,19,1.66,47,0.013,48,0.013,51,1.801,80,2.825,90,2.18,100,3.055,138,2.462,140,2.462,141,2.825,146,1.66,183,1.047,234,1.801,241,1.342,273,2.462,274,2.462,275,2.462,276,3.534,372,2.825,391,2.462,392,2.462,447,1.969,481,2.462,482,2.462,483,2.462,610,2.462,611,2.891,612,2.891,613,2.891,614,2.891,615,2.891,616,2.891]],["title/properties.html",[200,1.15,522,2.514]],["body/properties.html",[12,0.022,47,0.019,48,0.019,200,1.393,557,4.382,597,4.382,604,4.382,617,5.146,618,5.146,619,5.146]],["title/miscellaneous/typealiases.html",[543,1.695,620,4.249]],["body/miscellaneous/typealiases.html",[12,0.019,47,0.019,48,0.019,55,0.747,68,0.506,245,3.205,247,4.622,297,5.22,543,2.955,621,5.146,622,5.146,623,5.146]],["title/miscellaneous/variables.html",[543,1.695,624,3.619]],["body/miscellaneous/variables.html",[12,0.021,47,0.018,48,0.018,55,0.665,68,0.561,206,1.948,438,3.887,439,4.303,446,4.434,447,3.887,449,4.303,543,2.629,624,3.898,625,5.707,626,5.707,627,5.707]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":618,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":615,"title":{},"body":{"overview.html":{}}}],["10.0.2",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":614,"title":{},"body":{"overview.html":{}}}],["16.4.5",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":612,"title":{},"body":{"overview.html":{}}}],["3",{"_index":613,"title":{},"body":{"overview.html":{}}}],["3.2.2",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":447,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5.1.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":611,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":616,"title":{},"body":{"overview.html":{}}}],["8.11.5",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthResponse.html":{}}}],["aliases",{"_index":621,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["amazing",{"_index":587,"title":{},"body":{"index.html":{}}}],["app",{"_index":565,"title":{},"body":{"index.html":{}}}],["applications",{"_index":556,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthTokenNotFoundException.html":{},"coverage.html":{}}}],["auth.controller",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":50,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":91,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/ProjectController.html":{},"coverage.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":597,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":80,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtokennotfoundexception",{"_index":113,"title":{"classes/AuthTokenNotFoundException.html":{}},"body":{"guards/AuthGuard.html":{},"classes/AuthTokenNotFoundException.html":{},"coverage.html":{}}}],["available",{"_index":609,"title":{},"body":{"modules.html":{}}}],["await",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/ProjectService.html":{}}}],["backers",{"_index":588,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":477,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}}}],["bcrypt",{"_index":328,"title":{},"body":{"injectables/PasswordService.html":{},"dependencies.html":{}}}],["bcrypt.compare(enteredpassword",{"_index":332,"title":{},"body":{"injectables/PasswordService.html":{}}}],["bcrypt.hash(password",{"_index":331,"title":{},"body":{"injectables/PasswordService.html":{}}}],["bearer",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":607,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":605,"title":{},"body":{"modules.html":{}}}],["building",{"_index":551,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cascade",{"_index":335,"title":{},"body":{"entities/Project.html":{}}}],["class",{"_index":46,"title":{"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":183,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":273,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_exports",{"_index":274,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_providers",{"_index":275,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_projectmodule",{"_index":391,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_projectmodule_imports",{"_index":393,"title":{},"body":{"modules/ProjectModule.html":{}}}],["cluster_projectmodule_providers",{"_index":392,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":481,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":482,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":483,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":264,"title":{},"body":{"entities/Image.html":{},"entities/Project.html":{},"entities/User.html":{}}}],["column({unique",{"_index":338,"title":{},"body":{"entities/Project.html":{},"entities/User.html":{}}}],["compare",{"_index":319,"title":{},"body":{"injectables/PasswordService.html":{}}}],["compare(enteredpassword",{"_index":322,"title":{},"body":{"injectables/PasswordService.html":{}}}],["configmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":214,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/PasswordService.html":{}}}],["configservice.get('db_name",{"_index":233,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_port",{"_index":228,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('host",{"_index":226,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('password",{"_index":231,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('username",{"_index":230,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["const",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"injectables/ProjectService.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":320,"title":{},"body":{"injectables/PasswordService.html":{}}}],["constructor(error",{"_index":188,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}}}],["constructor(imagerepository",{"_index":286,"title":{},"body":{"injectables/ImagesService.html":{}}}],["constructor(jwtservice",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["constructor(private",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{}}}],["constructor(projectrepository",{"_index":401,"title":{},"body":{"injectables/ProjectService.html":{}}}],["constructor(userrepository",{"_index":491,"title":{},"body":{"injectables/UserService.html":{}}}],["context",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":49,"title":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('project",{"_index":379,"title":{},"body":{"controllers/ProjectController.html":{}}}],["controllers",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"overview.html":{}}}],["coverage",{"_index":505,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":282,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateImageDto.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":381,"title":{},"body":{"controllers/ProjectController.html":{}}}],["create(createprojectdto",{"_index":354,"title":{},"body":{"controllers/ProjectController.html":{}}}],["create(payload",{"_index":290,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["createimagedto",{"_index":194,"title":{"classes/CreateImageDto.html":{}},"body":{"classes/CreateImageDto.html":{},"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["createprojectdto",{"_index":197,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectController.html":{},"coverage.html":{}}}],["createquerybuilder('project",{"_index":426,"title":{},"body":{"injectables/ProjectService.html":{}}}],["data.interface",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.interface.ts",{"_index":243,"title":{},"body":{"interfaces/IAuthData.html":{},"coverage.html":{}}}],["database",{"_index":232,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database.module",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":13,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"entities/Image.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{}}}],["default",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"entities/Image.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":370,"title":{},"body":{"controllers/ProjectController.html":{}}}],["delete(':id",{"_index":363,"title":{},"body":{"controllers/ProjectController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":557,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":566,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/create",{"_index":374,"title":{},"body":{"controllers/ProjectController.html":{}}}],["dto/sign",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":376,"title":{},"body":{"controllers/ProjectController.html":{}}}],["e2e",{"_index":577,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":552,"title":{},"body":{"index.html":{}}}],["email",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/IAuthData.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUser.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{}}}],["enteredpassword",{"_index":325,"title":{},"body":{"injectables/PasswordService.html":{}}}],["entities",{"_index":234,"title":{},"body":{"modules/DatabaseModule.html":{},"entities/Image.html":{},"entities/Project.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/image.entity",{"_index":279,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["entities/project.entity",{"_index":396,"title":{},"body":{"modules/ProjectModule.html":{},"injectables/ProjectService.html":{}}}],["entities/user.entity",{"_index":486,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":260,"title":{"entities/Image.html":{},"entities/Project.html":{},"entities/User.html":{}},"body":{"entities/Image.html":{},"entities/Project.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('image",{"_index":272,"title":{},"body":{"entities/Image.html":{}}}],["entity('project",{"_index":347,"title":{},"body":{"entities/Project.html":{}}}],["entity('user",{"_index":474,"title":{},"body":{"entities/User.html":{}}}],["error",{"_index":190,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}}}],["example",{"_index":562,"title":{},"body":{"index.html":{}}}],["exception",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exception.ts",{"_index":315,"title":{},"body":{"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["exception.ts:3",{"_index":316,"title":{},"body":{"classes/InvalidTokenException.html":{}}}],["exceptions/incorrect",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["exceptions/invalid",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exceptions/no",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exceptions/user",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["executioncontext",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exists",{"_index":480,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["exists.exception",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists.exception.ts",{"_index":476,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["exists.exception.ts:3",{"_index":478,"title":{},"body":{"classes/UserAlreadyExistsException.html":{}}}],["export",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":186,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/UpdateImageDto.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}}}],["extracttokenfromheader",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":351,"title":{},"body":{"controllers/ProjectController.html":{}}}],["findall(@param('id",{"_index":383,"title":{},"body":{"controllers/ProjectController.html":{}}}],["findall(id",{"_index":356,"title":{},"body":{"controllers/ProjectController.html":{}}}],["findallbyuserid",{"_index":400,"title":{},"body":{"injectables/ProjectService.html":{}}}],["findallbyuserid(userid",{"_index":406,"title":{},"body":{"injectables/ProjectService.html":{}}}],["findbyuseriddto",{"_index":236,"title":{"classes/FindByUserIdDto.html":{}},"body":{"classes/FindByUserIdDto.html":{},"coverage.html":{}}}],["findone",{"_index":352,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":385,"title":{},"body":{"controllers/ProjectController.html":{}}}],["findone(id",{"_index":359,"title":{},"body":{"controllers/ProjectController.html":{}}}],["findone(payload",{"_index":496,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyid",{"_index":283,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProjectService.html":{}}}],["findonebyid(id",{"_index":292,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProjectService.html":{}}}],["found",{"_index":193,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"injectables/ProjectService.html":{},"classes/UserNotFoundException.html":{}}}],["found.exception",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["found.exception.ts",{"_index":488,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":489,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["framework",{"_index":550,"title":{},"body":{"index.html":{}}}],["function",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":544,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/findbyuserid/:id",{"_index":357,"title":{},"body":{"controllers/ProjectController.html":{}}}],["get(':id",{"_index":360,"title":{},"body":{"controllers/ProjectController.html":{}}}],["getmany",{"_index":430,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getone",{"_index":432,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getting",{"_index":546,"title":{"index.html":{}},"body":{}}],["global",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":608,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":583,"title":{},"body":{"index.html":{}}}],["guard",{"_index":90,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hash",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswordService.html":{}}}],["hash(password",{"_index":326,"title":{},"body":{"injectables/PasswordService.html":{}}}],["here",{"_index":594,"title":{},"body":{"index.html":{}}}],["host",{"_index":225,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["https://nestjs.com",{"_index":601,"title":{},"body":{"index.html":{}}}],["iauthdata",{"_index":149,"title":{"interfaces/IAuthData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAuthData.html":{},"coverage.html":{}}}],["iauthresponse",{"_index":161,"title":{"interfaces/IAuthResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAuthResponse.html":{},"coverage.html":{}}}],["icreateimage",{"_index":245,"title":{"interfaces/ICreateImage.html":{}},"body":{"interfaces/ICreateImage.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["icreateproject",{"_index":248,"title":{"interfaces/ICreateProject.html":{}},"body":{"interfaces/ICreateProject.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["icreateuser",{"_index":251,"title":{"interfaces/ICreateUser.html":{}},"body":{"interfaces/ICreateUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["id",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IFindUser.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"injectables/ImagesService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"entities/User.html":{}}}],["id.dto.ts",{"_index":238,"title":{},"body":{"classes/FindByUserIdDto.html":{},"coverage.html":{}}}],["id.dto.ts:6",{"_index":239,"title":{},"body":{"classes/FindByUserIdDto.html":{}}}],["identifier",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["ifinduser",{"_index":254,"title":{"interfaces/IFindUser.html":{}},"body":{"interfaces/IFindUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["image",{"_index":201,"title":{"entities/Image.html":{}},"body":{"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/IUpdateProject.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"entities/Project.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["image.dto",{"_index":460,"title":{},"body":{"classes/UpdateImageDto.html":{}}}],["image.dto.ts",{"_index":196,"title":{},"body":{"classes/CreateImageDto.html":{},"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["image.interface",{"_index":301,"title":{},"body":{"injectables/ImagesService.html":{}}}],["image.interface.ts",{"_index":247,"title":{},"body":{"interfaces/ICreateImage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imagerepository",{"_index":289,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images.service",{"_index":278,"title":{},"body":{"modules/ImagesModule.html":{}}}],["images/entities/image.entity",{"_index":220,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["images/images.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["imageservice",{"_index":402,"title":{},"body":{"injectables/ProjectService.html":{}}}],["imagesmodule",{"_index":14,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":276,"title":{"injectables/ImagesService.html":{}},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"overview.html":{}}}],["implements",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{}}}],["in.dto",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["in.dto.ts",{"_index":439,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["in.dto.ts:13",{"_index":441,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:9",{"_index":443,"title":{},"body":{"classes/SignInDto.html":{}}}],["incorrectpasswordexception",{"_index":158,"title":{"classes/IncorrectPasswordException.html":{}},"body":{"injectables/AuthService.html":{},"classes/IncorrectPasswordException.html":{},"coverage.html":{}}}],["index",{"_index":55,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":222,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["injectable",{"_index":111,"title":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":299,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["injectrepository(image",{"_index":303,"title":{},"body":{"injectables/ImagesService.html":{}}}],["injectrepository(project",{"_index":416,"title":{},"body":{"injectables/ProjectService.html":{}}}],["injectrepository(user",{"_index":501,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":561,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":564,"title":{},"body":{"index.html":{}}}],["interface",{"_index":240,"title":{"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{}},"body":{"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["interface/create",{"_index":413,"title":{},"body":{"injectables/ProjectService.html":{}}}],["interface/update",{"_index":415,"title":{},"body":{"injectables/ProjectService.html":{}}}],["interfaces",{"_index":241,"title":{},"body":{"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces/create",{"_index":300,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/UserService.html":{}}}],["interfaces/find",{"_index":500,"title":{},"body":{"injectables/UserService.html":{}}}],["interfaces/update",{"_index":302,"title":{},"body":{"injectables/ImagesService.html":{}}}],["interfaces/user.interface",{"_index":499,"title":{},"body":{"injectables/UserService.html":{}}}],["invalidtokenexception",{"_index":116,"title":{"classes/InvalidTokenException.html":{}},"body":{"guards/AuthGuard.html":{},"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["isemail",{"_index":444,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isglobal",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":209,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"classes/UpdateProjectDto.html":{}}}],["isnotempty",{"_index":210,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{}}}],["isnotempty()@isemail",{"_index":440,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isint",{"_index":207,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"classes/UpdateProjectDto.html":{}}}],["isnotempty()@isstring",{"_index":203,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["ispasswordcorrect",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":211,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{}}}],["isstring()@isnotempty",{"_index":451,"title":{},"body":{"classes/SignUpDto.html":{}}}],["isstring()@isnotempty()@minlength(min_password_length",{"_index":442,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["iupdateimage",{"_index":297,"title":{},"body":{"injectables/ImagesService.html":{},"miscellaneous/typealiases.html":{}}}],["iupdateproject",{"_index":256,"title":{"interfaces/IUpdateProject.html":{}},"body":{"interfaces/IUpdateProject.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["iuser",{"_index":258,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["join",{"_index":590,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":345,"title":{},"body":{"entities/Project.html":{}}}],["jwtmodule",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":598,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('project.image",{"_index":428,"title":{},"body":{"injectables/ProjectService.html":{}}}],["leftjoinandselect('project.user",{"_index":427,"title":{},"body":{"injectables/ProjectService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":604,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":581,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":346,"title":{},"body":{"entities/Project.html":{}}}],["manytoone(undefined",{"_index":340,"title":{},"body":{"entities/Project.html":{}}}],["matching",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["min_password_length",{"_index":446,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":445,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(min_password_length",{"_index":448,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":543,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":580,"title":{},"body":{"index.html":{}}}],["mode",{"_index":570,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":593,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":599,"title":{},"body":{"index.html":{}}}],["name",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"interfaces/IAuthData.html":{},"interfaces/ICreateUser.html":{},"interfaces/IUser.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":558,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":603,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"injectables/PasswordService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":458,"title":{},"body":{"classes/UpdateImageDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":216,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["newuser",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.id",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.name",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":549,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":411,"title":{},"body":{"injectables/ProjectService.html":{}}}],["notfoundexception('user",{"_index":418,"title":{},"body":{"injectables/ProjectService.html":{}}}],["notfoundexception(`project",{"_index":433,"title":{},"body":{"injectables/ProjectService.html":{}}}],["npm",{"_index":563,"title":{},"body":{"index.html":{}}}],["number",{"_index":206,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateProject.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"injectables/ImagesService.html":{},"entities/Project.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["onetomany",{"_index":473,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":470,"title":{},"body":{"entities/User.html":{}}}],["onetoone",{"_index":270,"title":{},"body":{"entities/Image.html":{},"entities/Project.html":{}}}],["onetoone(undefined",{"_index":266,"title":{},"body":{"entities/Image.html":{},"entities/Project.html":{}}}],["open",{"_index":582,"title":{},"body":{"index.html":{}}}],["optional",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"interfaces/IAuthData.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["out",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":610,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":522,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":369,"title":{},"body":{"controllers/ProjectController.html":{}}}],["parameters",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":457,"title":{},"body":{"classes/UpdateImageDto.html":{}}}],["partialtype(createimagedto",{"_index":456,"title":{},"body":{"classes/UpdateImageDto.html":{}}}],["password",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IAuthData.html":{},"interfaces/ICreateUser.html":{},"interfaces/IUser.html":{},"classes/IncorrectPasswordException.html":{},"injectables/PasswordService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{}}}],["password.exception",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.exception.ts",{"_index":311,"title":{},"body":{"classes/IncorrectPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:3",{"_index":312,"title":{},"body":{"classes/IncorrectPasswordException.html":{}}}],["password.service",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordservice",{"_index":141,"title":{"injectables/PasswordService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PasswordService.html":{},"coverage.html":{},"overview.html":{}}}],["patch",{"_index":368,"title":{},"body":{"controllers/ProjectController.html":{}}}],["patch(':id",{"_index":366,"title":{},"body":{"controllers/ProjectController.html":{}}}],["payload",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["payload.image",{"_index":420,"title":{},"body":{"injectables/ProjectService.html":{}}}],["payload.title",{"_index":422,"title":{},"body":{"injectables/ProjectService.html":{}}}],["payload.userid",{"_index":417,"title":{},"body":{"injectables/ProjectService.html":{}}}],["pg",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":591,"title":{},"body":{"index.html":{}}}],["port",{"_index":227,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["post",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["post('signin",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":224,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prefix",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["primarygeneratedcolumn",{"_index":262,"title":{},"body":{"entities/Image.html":{},"entities/Project.html":{},"entities/User.html":{}}}],["private",{"_index":95,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":572,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":548,"title":{},"body":{"index.html":{}}}],["project",{"_index":218,"title":{"entities/Project.html":{}},"body":{"modules/DatabaseModule.html":{},"entities/Image.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"entities/User.html":{},"coverage.html":{},"index.html":{}}}],["project.controller",{"_index":395,"title":{},"body":{"modules/ProjectModule.html":{}}}],["project.dto",{"_index":375,"title":{},"body":{"controllers/ProjectController.html":{}}}],["project.dto.ts",{"_index":199,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["project.dto.ts:10",{"_index":205,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:12",{"_index":462,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.dto.ts:14",{"_index":204,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:6",{"_index":208,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts:9",{"_index":463,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.image",{"_index":267,"title":{},"body":{"entities/Image.html":{}}}],["project.image.image",{"_index":435,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.interface",{"_index":414,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.interface.ts",{"_index":250,"title":{},"body":{"interfaces/ICreateProject.html":{},"interfaces/IUpdateProject.html":{},"coverage.html":{}}}],["project.service",{"_index":373,"title":{},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{}}}],["project.title",{"_index":436,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.user",{"_index":471,"title":{},"body":{"entities/User.html":{}}}],["project/entities/project.entity",{"_index":219,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["project/project.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["projectcontroller",{"_index":349,"title":{"controllers/ProjectController.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"coverage.html":{}}}],["projectmodule",{"_index":15,"title":{"modules/ProjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"modules.html":{},"overview.html":{}}}],["projectrepository",{"_index":404,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects",{"_index":424,"title":{},"body":{"injectables/ProjectService.html":{},"entities/User.html":{}}}],["projectservice",{"_index":372,"title":{"injectables/ProjectService.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":200,"title":{"properties.html":{}},"body":{"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"entities/Project.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":465,"title":{},"body":{"entities/User.html":{}}}],["read",{"_index":592,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":380,"title":{},"body":{"controllers/ProjectController.html":{}}}],["reflect",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":353,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["remove(@param('id",{"_index":389,"title":{},"body":{"controllers/ProjectController.html":{}}}],["remove(id",{"_index":362,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["removebyid",{"_index":284,"title":{},"body":{"injectables/ImagesService.html":{}}}],["removebyid(id",{"_index":294,"title":{},"body":{"injectables/ImagesService.html":{}}}],["repository",{"_index":287,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["request",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.interface",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.interface.ts",{"_index":244,"title":{},"body":{"interfaces/IAuthResponse.html":{},"coverage.html":{}}}],["results",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PasswordService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["run",{"_index":567,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":329,"title":{},"body":{"injectables/PasswordService.html":{}}}],["scalable",{"_index":553,"title":{},"body":{"index.html":{}}}],["secret",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":554,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["services/password.service",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":555,"title":{},"body":{"index.html":{}}}],["signin",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(signindata",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signindata",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signindata.email",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindata.password",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":61,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signup",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(signupdata",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdata",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdata.email",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdata.name",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto",{"_index":74,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["source",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateImageDto.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":585,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sign",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../update",{"_index":622,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:11",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dto/sign",{"_index":438,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/exceptions/incorrect",{"_index":310,"title":{},"body":{"classes/IncorrectPasswordException.html":{},"coverage.html":{}}}],["src/auth/exceptions/invalid",{"_index":314,"title":{},"body":{"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["src/auth/exceptions/no",{"_index":184,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"coverage.html":{}}}],["src/auth/exceptions/user",{"_index":475,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard",{"_index":377,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":93,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/guards/auth.guard.ts:31",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/guards/auth.guard.ts:9",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/interfaces/auth",{"_index":242,"title":{},"body":{"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:12",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:19",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:41",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/password.service.ts",{"_index":318,"title":{},"body":{"injectables/PasswordService.html":{},"coverage.html":{}}}],["src/auth/services/password.service.ts:14",{"_index":324,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/auth/services/password.service.ts:6",{"_index":321,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/auth/services/password.service.ts:8",{"_index":327,"title":{},"body":{"injectables/PasswordService.html":{}}}],["src/database.module.ts",{"_index":213,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/images/dto/create",{"_index":195,"title":{},"body":{"classes/CreateImageDto.html":{},"coverage.html":{}}}],["src/images/dto/update",{"_index":455,"title":{},"body":{"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["src/images/entities/image.entity",{"_index":343,"title":{},"body":{"entities/Project.html":{}}}],["src/images/entities/image.entity.ts",{"_index":261,"title":{},"body":{"entities/Image.html":{},"coverage.html":{}}}],["src/images/entities/image.entity.ts:10",{"_index":265,"title":{},"body":{"entities/Image.html":{}}}],["src/images/entities/image.entity.ts:13",{"_index":268,"title":{},"body":{"entities/Image.html":{}}}],["src/images/entities/image.entity.ts:7",{"_index":263,"title":{},"body":{"entities/Image.html":{}}}],["src/images/images.module",{"_index":397,"title":{},"body":{"modules/ProjectModule.html":{}}}],["src/images/images.module.ts",{"_index":277,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/images.service",{"_index":412,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/images/images.service.ts",{"_index":281,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/images.service.ts:15",{"_index":291,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:20",{"_index":293,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:24",{"_index":298,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:29",{"_index":295,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:9",{"_index":288,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/interfaces/create",{"_index":246,"title":{},"body":{"interfaces/ICreateImage.html":{},"coverage.html":{}}}],["src/images/interfaces/update",{"_index":623,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":516,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/project/dto/create",{"_index":198,"title":{},"body":{"classes/CreateProjectDto.html":{},"coverage.html":{}}}],["src/project/dto/find",{"_index":237,"title":{},"body":{"classes/FindByUserIdDto.html":{},"coverage.html":{}}}],["src/project/dto/update",{"_index":461,"title":{},"body":{"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["src/project/entities/project.entity",{"_index":269,"title":{},"body":{"entities/Image.html":{},"entities/User.html":{}}}],["src/project/entities/project.entity.ts",{"_index":333,"title":{},"body":{"entities/Project.html":{},"coverage.html":{}}}],["src/project/entities/project.entity.ts:15",{"_index":334,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.entity.ts:18",{"_index":339,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.entity.ts:21",{"_index":342,"title":{},"body":{"entities/Project.html":{}}}],["src/project/entities/project.entity.ts:25",{"_index":337,"title":{},"body":{"entities/Project.html":{}}}],["src/project/interface/create",{"_index":249,"title":{},"body":{"interfaces/ICreateProject.html":{},"coverage.html":{}}}],["src/project/interface/update",{"_index":257,"title":{},"body":{"interfaces/IUpdateProject.html":{},"coverage.html":{}}}],["src/project/project.controller.ts",{"_index":350,"title":{},"body":{"controllers/ProjectController.html":{},"coverage.html":{}}}],["src/project/project.controller.ts:22",{"_index":355,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:27",{"_index":358,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:32",{"_index":361,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:37",{"_index":367,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:42",{"_index":364,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.module.ts",{"_index":394,"title":{},"body":{"modules/ProjectModule.html":{}}}],["src/project/project.service.ts",{"_index":399,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/project/project.service.ts:11",{"_index":403,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:19",{"_index":405,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:35",{"_index":407,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:46",{"_index":408,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:60",{"_index":410,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:77",{"_index":409,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/user/entities/user.entity",{"_index":344,"title":{},"body":{"entities/Project.html":{}}}],["src/user/entities/user.entity.ts",{"_index":464,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":468,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:13",{"_index":466,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:16",{"_index":469,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:19",{"_index":472,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":467,"title":{},"body":{"entities/User.html":{}}}],["src/user/interfaces/create",{"_index":252,"title":{},"body":{"interfaces/ICreateUser.html":{},"coverage.html":{}}}],["src/user/interfaces/find",{"_index":255,"title":{},"body":{"interfaces/IFindUser.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":259,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/user/user.module",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProjectModule.html":{}}}],["src/user/user.module.ts",{"_index":484,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectService.html":{}}}],["src/user/user.service.ts",{"_index":490,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":492,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:15",{"_index":494,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:21",{"_index":497,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":568,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":571,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":573,"title":{},"body":{"index.html":{}}}],["started",{"_index":547,"title":{"index.html":{}},"body":{}}],["starter",{"_index":560,"title":{},"body":{"index.html":{}}}],["statements",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":595,"title":{},"body":{"index.html":{}}}],["storedpassword",{"_index":323,"title":{},"body":{"injectables/PasswordService.html":{}}}],["string",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateProjectDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}}}],["super('authorization",{"_index":192,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{}}}],["super('incorrect",{"_index":313,"title":{},"body":{"classes/IncorrectPasswordException.html":{}}}],["super('invalid",{"_index":317,"title":{},"body":{"classes/InvalidTokenException.html":{}}}],["super('user",{"_index":479,"title":{},"body":{"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}}}],["support",{"_index":586,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":606,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":235,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":576,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":579,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":578,"title":{},"body":{"index.html":{}}}],["tests",{"_index":575,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":584,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(signindata",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdata",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('salt",{"_index":330,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.extracttokenfromheader(request",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.findonebyid(id",{"_index":308,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProjectService.html":{}}}],["this.imagerepository.create(payload",{"_index":304,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagerepository.findone",{"_index":306,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagerepository.remove(image",{"_index":309,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagerepository.save(image",{"_index":305,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagerepository.update(id",{"_index":307,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imageservice.create",{"_index":419,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.imageservice.update(project.image.id",{"_index":434,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.passwordservice.compare",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.passwordservice.hash(signupdata.password",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.projectrepository",{"_index":425,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.create",{"_index":421,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.remove(project",{"_index":437,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectrepository.save(project",{"_index":423,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectservice.create(createprojectdto",{"_index":382,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.findallbyuserid(+id",{"_index":384,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.findonebyid(+id",{"_index":386,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.remove(+id",{"_index":390,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.update(+id",{"_index":388,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.userrepository.create(payload",{"_index":502,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":504,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":503,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findone",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectService.html":{}}}],["throw",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectService.html":{}}}],["title",{"_index":202,"title":{},"body":{"classes/CreateProjectDto.html":{},"interfaces/ICreateProject.html":{},"interfaces/IUpdateProject.html":{},"entities/Project.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{}}}],["token",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/InvalidTokenException.html":{},"coverage.html":{}}}],["token.exception",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{}}}],["token.exception.ts",{"_index":185,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"coverage.html":{}}}],["token.exception.ts:3",{"_index":189,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{}}}],["touch",{"_index":596,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/DatabaseModule.html":{},"entities/Project.html":{},"entities/User.html":{}}}],["true})@joincolumn",{"_index":336,"title":{},"body":{"entities/Project.html":{}}}],["twitter",{"_index":602,"title":{},"body":{"index.html":{}}}],["type",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthTokenNotFoundException.html":{},"classes/CreateProjectDto.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthData.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateImage.html":{},"interfaces/ICreateProject.html":{},"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"interfaces/IUpdateProject.html":{},"interfaces/IUser.html":{},"entities/Image.html":{},"injectables/ImagesService.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"injectables/PasswordService.html":{},"entities/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{},"entities/User.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":620,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":271,"title":{},"body":{"entities/Image.html":{},"injectables/ImagesService.html":{},"entities/Project.html":{},"injectables/ProjectService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":215,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([image",{"_index":280,"title":{},"body":{"modules/ImagesModule.html":{}}}],["typeormmodule.forfeature([project",{"_index":398,"title":{},"body":{"modules/ProjectModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":487,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":221,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":459,"title":{},"body":{"classes/UpdateImageDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":559,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":187,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{}}}],["undefined",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ProjectService.html":{}}}],["unique",{"_index":348,"title":{},"body":{"entities/Project.html":{},"entities/User.html":{}}}],["unit",{"_index":574,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":495,"title":{},"body":{"injectables/UserService.html":{}}}],["unlicensed",{"_index":619,"title":{},"body":{"properties.html":{}}}],["up.dto",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["up.dto.ts",{"_index":449,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["up.dto.ts:13",{"_index":453,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:17",{"_index":450,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:8",{"_index":452,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":285,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["update(@param('id",{"_index":387,"title":{},"body":{"controllers/ProjectController.html":{}}}],["update(id",{"_index":296,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["updateimagedto",{"_index":454,"title":{"classes/UpdateImageDto.html":{}},"body":{"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["updateprojectdto",{"_index":365,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectController.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["usefactory",{"_index":223,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["useguards",{"_index":371,"title":{},"body":{"controllers/ProjectController.html":{}}}],["useguards(authguard",{"_index":378,"title":{},"body":{"controllers/ProjectController.html":{}}}],["user",{"_index":132,"title":{"entities/User.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/FindByUserIdDto.html":{},"entities/Project.html":{},"injectables/ProjectService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.interface",{"_index":498,"title":{},"body":{"injectables/UserService.html":{}}}],["user.interface.ts",{"_index":253,"title":{},"body":{"interfaces/ICreateUser.html":{},"interfaces/IFindUser.html":{},"coverage.html":{}}}],["user.name",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.projects",{"_index":341,"title":{},"body":{"entities/Project.html":{}}}],["user.service",{"_index":485,"title":{},"body":{"modules/UserModule.html":{}}}],["user/entities/user.entity",{"_index":217,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user/user.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["useralreadyexistsexception",{"_index":155,"title":{"classes/UserAlreadyExistsException.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserAlreadyExistsException.html":{},"coverage.html":{}}}],["userid",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICreateProject.html":{},"interfaces/IUpdateProject.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{}}}],["usermodule",{"_index":16,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":229,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usernotfoundexception",{"_index":120,"title":{"classes/UserNotFoundException.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["userrepository",{"_index":493,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":100,"title":{"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":212,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/FindByUserIdDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["value",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":624,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":617,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":569,"title":{},"body":{"index.html":{}}}],["website",{"_index":600,"title":{},"body":{"index.html":{}}}],["where('project.id",{"_index":431,"title":{},"body":{"injectables/ProjectService.html":{}}}],["where('user.id",{"_index":429,"title":{},"body":{"injectables/ProjectService.html":{}}}],["yes",{"_index":191,"title":{},"body":{"classes/AuthTokenNotFoundException.html":{},"classes/IncorrectPasswordException.html":{},"classes/InvalidTokenException.html":{},"classes/UserAlreadyExistsException.html":{},"classes/UserNotFoundException.html":{}}}],["you'd",{"_index":589,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/ProjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            ProjectModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './database.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ProjectModule } from './project/project.module';\nimport { ImagesModule } from './images/images.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport * as dotenv from 'dotenv';\ndotenv.config();\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n    }),\n    DatabaseModule,\n    UserModule,\n    AuthModule,\n    ProjectModule,\n    ImagesModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                signIn\n                            \n                            \n                                    \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInData: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signIn')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInData\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(signUpData: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signUp')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpData\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { SignInDto } from './dto/sign-in.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('signUp')\n  async signUp(\n    @Body() signUpData: SignUpDto,\n  ): Promise {\n    return this.authService.signUp(signUpData);\n  }\n\n  @Post('signIn')\n  async signIn(\n    @Body() signInData: SignInDto,\n  ): Promise {\n    return this.authService.signIn(signInData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/auth.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/auth.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserService } from 'src/user/user.service';\nimport { AuthTokenNotFoundException } from '../exceptions/no-auth-token.exception';\nimport { InvalidTokenException } from '../exceptions/invalid-token-exception';\nimport { UserNotFoundException } from '../exceptions/user-not-found.exception';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private userService: UserService,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n\n    if (!token) throw new AuthTokenNotFoundException();\n\n    const payload = await this.jwtService.verifyAsync(token);\n\n    if (!payload) throw new InvalidTokenException();\n\n    const user = await this.userService.findOne({ email: payload.email });\n\n    if (!user) throw new UserNotFoundException();\n\n    return true;\n  }\n\n  private extractTokenFromHeader(request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPasswordService\n\nPasswordService\n\nAuthModule -->\n\nPasswordService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            PasswordService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\nimport { AuthController } from './auth.controller';\nimport { PasswordService } from './services/password.service';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [UserModule],\n  providers: [AuthService, PasswordService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, passwordService: PasswordService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordService\n                                                  \n                                                        \n                                                                        PasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInData: IAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInData\n                                            \n                                                            IAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(signUpData: IAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpData\n                                            \n                                                            IAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PasswordService } from './password.service';\nimport { UserService } from 'src/user/user.service';\nimport { IAuthData } from '../interfaces/auth-data.interface';\nimport { UserAlreadyExistsException } from '../exceptions/user-already-exists.exception';\nimport { UserNotFoundException } from '../exceptions/user-not-found.exception';\nimport { IncorrectPasswordException } from '../exceptions/incorrect-password.exception';\nimport { IAuthResponse } from '../interfaces/auth-response.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private passwordService: PasswordService,\n    private userService: UserService,\n  ) {}\n\n  async signUp(signUpData: IAuthData): Promise {\n    const user = await this.userService.findOne({\n      email: signUpData.email,\n    });\n\n    if (user) throw new UserAlreadyExistsException();\n\n    const hash = await this.passwordService.hash(signUpData.password);\n\n    const newUser = await this.userService.create({\n      name: signUpData.name,\n      email: signUpData.email,\n      password: hash,\n    });\n\n    const payload = { name: newUser.name, id: newUser.id };\n\n    const token = await this.jwtService.signAsync(payload);\n\n    return { access_token: token, userId: newUser.id };\n  }\n\n  async signIn(signInData: IAuthData): Promise {\n    const user = await this.userService.findOne({\n      email: signInData.email,\n    });\n\n    if (!user) throw new UserNotFoundException();\n\n    const isPasswordCorrect = await this.passwordService.compare(\n      signInData.password,\n      user.password,\n    );\n\n    if (!isPasswordCorrect) throw new IncorrectPasswordException();\n\n    const payload = { name: user.name, id: user.id };\n\n    const token = await this.jwtService.signAsync(payload);\n\n    return { access_token: token, userId: user.id };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthTokenNotFoundException.html":{"url":"classes/AuthTokenNotFoundException.html","title":"class - AuthTokenNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthTokenNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/no-auth-token.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/exceptions/no-auth-token.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\n\nexport class AuthTokenNotFoundException extends UnauthorizedException {\n  constructor(error?: string) {\n    super('Authorization token not found', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateImageDto.html":{"url":"classes/CreateImageDto.html","title":"class - CreateImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/create-image.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateImageDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/create-project.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateProjectDto {\n  @IsNotEmpty()\n  @IsInt()\n  userId: number;\n\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user/entities/user.entity';\nimport { Project } from './project/entities/project.entity';\nimport { Image } from './images/entities/image.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('HOST'),\n        port: configService.get('DB_PORT'),\n        username: configService.get('USERNAME'),\n        password: configService.get('PASSWORD'),\n        database: configService.get('DB_NAME'),\n        entities: [User, Project, Image],\n        synchronize: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindByUserIdDto.html":{"url":"classes/FindByUserIdDto.html","title":"class - FindByUserIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindByUserIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/find-by-user-id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/find-by-user-id.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class FindByUserIdDto {\n  @IsNotEmpty()\n  @IsInt()\n  userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthData.html":{"url":"interfaces/IAuthData.html","title":"interface - IAuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAuthData {\n  name?: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthResponse.html":{"url":"interfaces/IAuthResponse.html","title":"interface - IAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/auth-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAuthResponse {\n  access_token: string;\n  userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateImage.html":{"url":"interfaces/ICreateImage.html","title":"interface - ICreateImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/interfaces/create-image.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            image\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateImage {\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateProject.html":{"url":"interfaces/ICreateProject.html","title":"interface - ICreateProject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateProject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/interface/create-project.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateProject {\n  title: string;\n  userId: number;\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateUser.html":{"url":"interfaces/ICreateUser.html","title":"interface - ICreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/create-user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateUser {\n  name: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindUser.html":{"url":"interfaces/IFindUser.html","title":"interface - IFindUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/find-user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFindUser {\n  id?: number;\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateProject.html":{"url":"interfaces/IUpdateProject.html","title":"interface - IUpdateProject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateProject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/interface/update-project.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUpdateProject {\n  userId: number;\n  title?: string;\n  image?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Image.html":{"url":"entities/Image.html","title":"entity - Image","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/entities/image.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/images/entities/image.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/images/entities/image.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, project => project.image)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/images/entities/image.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Project } from 'src/project/entities/project.entity';\nimport { Column, Entity, OneToOne, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('image')\nexport class Image {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  image: string;\n\n  @OneToOne(() => Project, (project) => project.image)\n  project: Project;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\n\nImagesService \n\nImagesService \n\n\n\nImagesModule\n\nImagesModule\n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ImagesService } from './images.service';\nimport { Image } from './entities/image.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Image])],\n  providers: [ImagesService],\n  exports: [ImagesService],\n})\nexport class ImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/images.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/images/images.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: ICreateImage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/images/images.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ICreateImage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/images/images.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/images/images.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, payload: IUpdateImage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/images/images.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            IUpdateImage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Image } from './entities/image.entity';\nimport { ICreateImage } from './interfaces/create-image.interface';\nimport { IUpdateImage } from './interfaces/update-image.interface';\n\n@Injectable()\nexport class ImagesService {\n  constructor(\n    @InjectRepository(Image)\n    private imageRepository: Repository,\n  ) {}\n\n  async create(payload: ICreateImage): Promise {\n    const image = this.imageRepository.create(payload);\n    return this.imageRepository.save(image);\n  }\n\n  async findOneById(id: number): Promise {\n    return await this.imageRepository.findOne({ where: { id } });\n  }\n\n  async update(id: number, payload: IUpdateImage): Promise {\n    await this.imageRepository.update(id, payload);\n    return this.findOneById(id);\n  }\n\n  async removeById(id: number): Promise {\n    const image = await this.findOneById(id);\n    await this.imageRepository.remove(image);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncorrectPasswordException.html":{"url":"classes/IncorrectPasswordException.html","title":"class - IncorrectPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncorrectPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/incorrect-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/exceptions/incorrect-password.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\n\nexport class IncorrectPasswordException extends UnauthorizedException {\n  constructor(error?: string) {\n    super('Incorrect password', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenException.html":{"url":"classes/InvalidTokenException.html","title":"class - InvalidTokenException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/invalid-token-exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/exceptions/invalid-token-exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\n\nexport class InvalidTokenException extends UnauthorizedException {\n  constructor(error?: string) {\n    super('Invalid token', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordService.html":{"url":"injectables/PasswordService.html","title":"injectable - PasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/password.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(enteredPassword: string, storedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/password.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                enteredPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                storedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/password.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class PasswordService {\n  constructor(private configService: ConfigService) {}\n  async hash(password: string): Promise {\n    const salt = this.configService.get('SALT');\n\n    return bcrypt.hash(password, salt);\n  }\n\n  async compare(\n    enteredPassword: string,\n    storedPassword: string,\n  ): Promise {\n    return bcrypt.compare(enteredPassword, storedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Project.html":{"url":"entities/Project.html","title":"entity - Project","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/entities/project.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Image\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.projects)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/entities/project.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Image } from 'src/images/entities/image.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity('project')\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  title: string;\n\n  @ManyToOne(() => User, (user) => user.projects)\n  user: User;\n\n  @OneToOne(() => Image, { cascade: true })\n  @JoinColumn()\n  image: Image;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectController.html":{"url":"controllers/ProjectController.html","title":"controller - ProjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                project\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProjectDto: CreateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProjectDto\n                                            \n                                                            CreateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/findByUserId/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProjectDto\n                                            \n                                                            UpdateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProjectService } from './project.service';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\n\n@UseGuards(AuthGuard)\n@Controller('project')\nexport class ProjectController {\n  constructor(private readonly projectService: ProjectService) {}\n\n  @Post()\n  create(@Body() createProjectDto: CreateProjectDto) {\n    return this.projectService.create(createProjectDto);\n  }\n\n  @Get('/findByUserId/:id')\n  findAll(@Param('id') id: string) {\n    return this.projectService.findAllByUserId(+id);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.projectService.findOneById(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProjectDto: UpdateProjectDto) {\n    return this.projectService.update(+id, updateProjectDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.projectService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_ProjectModule_imports\n\n\n\n\nImagesModule\n\nImagesModule\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nImagesModule->ProjectModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nProjectModule -->\n\nUserModule->ProjectModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/project.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImagesModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProjectService } from './project.service';\nimport { ProjectController } from './project.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Project } from './entities/project.entity';\nimport { ImagesModule } from 'src/images/images.module';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Project]), ImagesModule, UserModule],\n  controllers: [ProjectController],\n  providers: [ProjectService],\n})\nexport class ProjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectRepository: Repository, userService: UserService, imageService: ImagesService)\n                    \n                \n                        \n                            \n                                Defined in src/project/project.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: ICreateProject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ICreateProject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUserId(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, payload: IUpdateProject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            IUpdateProject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Project } from './entities/project.entity';\nimport { ImagesService } from 'src/images/images.service';\nimport { ICreateProject } from './interface/create-project.interface';\nimport { UserService } from 'src/user/user.service';\nimport { IUpdateProject } from './interface/update-project.interface';\n\n@Injectable()\nexport class ProjectService {\n  constructor(\n    @InjectRepository(Project)\n    private projectRepository: Repository,\n    private userService: UserService,\n    private imageService: ImagesService,\n  ) {}\n\n  async create(payload: ICreateProject): Promise {\n    const user = await this.userService.findOne({ id: payload.userId });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const image = await this.imageService.create({ image: payload.image });\n\n    const project = await this.projectRepository.create({\n      title: payload.title,\n      user,\n      image,\n    });\n    return await this.projectRepository.save(project);\n  }\n\n  async findAllByUserId(userId: number): Promise {\n    const projects = await this.projectRepository\n      .createQueryBuilder('project')\n      .leftJoinAndSelect('project.user', 'user')\n      .leftJoinAndSelect('project.image', 'image')\n      .where('user.id = :userId', { userId })\n      .getMany();\n\n    return projects;\n  }\n\n  async findOneById(id: number): Promise {\n    const project = await this.projectRepository\n      .createQueryBuilder('project')\n      .leftJoinAndSelect('project.user', 'user')\n      .leftJoinAndSelect('project.image', 'image')\n      .where('project.id = :id', { id })\n      .getOne();\n\n    if (!project) {\n      throw new NotFoundException(`Project #${id} not found`);\n    }\n    return project;\n  }\n\n  async update(id: number, payload: IUpdateProject): Promise {\n    const project = await this.findOneById(id);\n\n    if (payload.image) {\n      await this.imageService.update(project.image.id, {\n        image: payload.image,\n      });\n      project.image.image = payload.image;\n    }\n\n    if (payload.title !== undefined) {\n      project.title = payload.title;\n    }\n\n    return this.projectRepository.save(project);\n  }\n\n  async remove(id: number): Promise {\n    const project = await this.findOneById(id);\n    await this.projectRepository.remove(project);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(MIN_PASSWORD_LENGTH)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nconst MIN_PASSWORD_LENGTH = 5;\n\nexport class SignInDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(MIN_PASSWORD_LENGTH)\n  password: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(MIN_PASSWORD_LENGTH)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nconst MIN_PASSWORD_LENGTH = 5;\n\nexport class SignUpDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(MIN_PASSWORD_LENGTH)\n  password: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateImageDto.html":{"url":"classes/UpdateImageDto.html","title":"class - UpdateImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/update-image.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateImageDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateImageDto } from './create-image.dto';\n\nexport class UpdateImageDto extends PartialType(CreateImageDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/update-project.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateProjectDto {\n  @IsNotEmpty()\n  @IsInt()\n  userId: number;\n\n  @IsString()\n  title?: string;\n\n  @IsString()\n  image?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                projects\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, project => project.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Project } from 'src/project/entities/project.entity';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('user')\nexport class User {\n  @PrimaryGeneratedColumn()\n  public id: number;\n\n  @Column()\n  public name: string;\n\n  @Column({ unique: true })\n  public email: string;\n\n  @Column()\n  public password: string;\n\n  @OneToMany(() => Project, (project) => project.user)\n  projects: Project[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAlreadyExistsException.html":{"url":"classes/UserAlreadyExistsException.html","title":"class - UserAlreadyExistsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAlreadyExistsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/user-already-exists.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/exceptions/user-already-exists.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\n\nexport class UserAlreadyExistsException extends BadRequestException {\n  constructor(error?: string) {\n    super('User already exists', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  providers: [UserService],\n  imports: [TypeOrmModule.forFeature([User])],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/exceptions/user-not-found.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\n\nexport class UserNotFoundException extends BadRequestException {\n  constructor(error?: string) {\n    super('User not found', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: ICreateUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ICreateUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(payload: IFindUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IFindUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './entities/user.entity';\nimport { ICreateUser } from './interfaces/create-user.interface';\nimport { IUser } from './interfaces/user.interface';\nimport { IFindUser } from './interfaces/find-user.interface';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User) private userRepository: Repository,\n  ) {}\n\n  async create(payload: ICreateUser) {\n    const user = this.userRepository.create(payload);\n\n    return this.userRepository.save(user);\n  }\n\n  async findOne(payload: IFindUser): Promise {\n    const user = this.userRepository.findOne({ where: payload });\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-in.dto.ts\n            \n            variable\n            MIN_PASSWORD_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-up.dto.ts\n            \n            variable\n            MIN_PASSWORD_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/exceptions/incorrect-password.exception.ts\n            \n            class\n            IncorrectPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/exceptions/invalid-token-exception.ts\n            \n            class\n            InvalidTokenException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/exceptions/no-auth-token.exception.ts\n            \n            class\n            AuthTokenNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/exceptions/user-already-exists.exception.ts\n            \n            class\n            UserAlreadyExistsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/exceptions/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/auth-data.interface.ts\n            \n            interface\n            IAuthData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/auth-response.interface.ts\n            \n            interface\n            IAuthResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/services/password.service.ts\n            \n            injectable\n            PasswordService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/images/dto/create-image.dto.ts\n            \n            class\n            CreateImageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/dto/update-image.dto.ts\n            \n            class\n            UpdateImageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/entities/image.entity.ts\n            \n            entity\n            Image\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/images/interfaces/create-image.interface.ts\n            \n            interface\n            ICreateImage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/project/dto/create-project.dto.ts\n            \n            class\n            CreateProjectDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/project/dto/find-by-user-id.dto.ts\n            \n            class\n            FindByUserIdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/project/dto/update-project.dto.ts\n            \n            class\n            UpdateProjectDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/project/entities/project.entity.ts\n            \n            entity\n            Project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/project/interface/create-project.interface.ts\n            \n            interface\n            ICreateProject\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/project/interface/update-project.interface.ts\n            \n            interface\n            IUpdateProject\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/project/project.controller.ts\n            \n            controller\n            ProjectController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/project/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interfaces/create-user.interface.ts\n            \n            interface\n            ICreateUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/interfaces/find-user.interface.ts\n            \n            interface\n            IFindUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            pg : ^8.11.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_exports\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nImagesModule->ProjectModule\n\n\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nImagesService \n\nImagesService \n\nImagesService  -->\n\nImagesModule->ImagesService \n\n\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nProjectModule -->\n\nUserModule->ProjectModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPasswordService\n\nPasswordService\n\nAuthModule -->\n\nPasswordService->AuthModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IUpdateImage   (src/.../update-image.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/images/interfaces/update-image.interface.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateImage\n                \n            \n            \n                \n                            ICreateImage\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MIN_PASSWORD_LENGTH   (src/.../sign-in.dto.ts)\n                        \n                        \n                            MIN_PASSWORD_LENGTH   (src/.../sign-up.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/dto/sign-in.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MIN_PASSWORD_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n\n    src/auth/dto/sign-up.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MIN_PASSWORD_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
